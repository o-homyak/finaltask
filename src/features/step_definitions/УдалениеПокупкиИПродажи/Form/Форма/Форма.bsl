//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьДокументПокупкаПодНомером(Парам01)","УМеняЕстьДокументПокупкаПодНомером","Допустим у меня есть документ покупка под номером 1");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РезультатПометкиНаУдалениеДолженБытьРавенИстина()","РезультатПометкиНаУдалениеДолженБытьРавенИстина","Тогда результат пометки на удаление должен быть равен Истина");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьДокументПродажаПодНомером(Парам01)","УМеняЕстьДокументПродажаПодНомером","Допустим у меня есть документ продажа под номером 1");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаСервере
Функция НайтиИУдалитьДокумент(ВидДокумента, Номер) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ИсходнаяТаблица.Ссылка КАК Ссылка,
	|	ИсходнаяТаблица.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ."+ ВидДокумента +" КАК ИсходнаяТаблица
	|ГДЕ
	|	ИсходнаяТаблица.Номер = &Номер");
	
	Запрос.УстановитьПараметр("Номер", Число(Номер));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение "Документ: " + ВидДокумента +" под номером: " + Номер + " не найден!";
	КонецЕсли;	
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий(); //он только один (здесь мы не учитуем дату. В нашем случае номерация сквозная)
	
	Помечен = Выборка.ПометкаУдаления;
	Если Не Помечен Тогда
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
		Помечен = Истина;
		
	КонецЕсли;	
	
	Возврат Помечен;
КонецФункции	


///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим у меня есть документ покупка под номером 1
//@УМеняЕстьДокументПокупкаПодНомером(Парам01)
Процедура УМеняЕстьДокументПокупкаПодНомером(НомерДокумента) Экспорт
	
	Контекст.Вставить("Номер", НомерДокумента);
	Контекст.Вставить("ВидДокумента", "Покупка");
	
КонецПроцедуры

&НаКлиенте
//Тогда результат пометки на удаление должен быть равен Истина
//@РезультатПометкиНаУдалениеДолженБытьРавенИстина()
Процедура РезультатПометкиНаУдалениеДолженБытьРавенИстина() Экспорт
	
	Результат = НайтиИУдалитьДокумент(Контекст.ВидДокумента, Контекст.Номер);
	Если Не Результат = Истина Тогда
		ВызватьИсключение "Документ не был удален";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
//Допустим у меня есть документ продажа под номером 1
//@УМеняЕстьДокументПродажаПодНомером(Парам01)
Процедура УМеняЕстьДокументПродажаПодНомером(НомерДокумента) Экспорт
	
	Контекст.Вставить("Номер", НомерДокумента);
	Контекст.Вставить("ВидДокумента", "Продажа");
	
КонецПроцедуры

//окончание текста модуля