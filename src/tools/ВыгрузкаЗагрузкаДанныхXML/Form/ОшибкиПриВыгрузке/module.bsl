
Перем мТипСтрока;

Процедура ТаблицаОбъектовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.Имя = "ТекстОшибки" Тогда
		
		Форма = ПолучитьФорму("ФормаРедактированияТекста", ЭтаФорма);
		Форма.УстановитьРедактируемыйТекст(ВыбраннаяСтрока.ТекстОшибки);
		Форма.Открыть();
		
	ИначеЕсли Колонка.Имя = "Объект" Тогда
		
		Попытка
		
			ЗначениеОбъекта = ВыбраннаяСтрока.СлужебныйОбъект;
			МетаданныеЗначения = ЗначениеОбъекта.Метаданные();
			
			ФормаСписка = Неопределено;
			
			Если Метаданные.РегистрыСведений.Содержит(МетаданныеЗначения) Тогда
		
				ФормаСписка = РегистрыСведений[МетаданныеЗначения.Имя].ПолучитьФормуСписка();
			
			ИначеЕсли Метаданные.РегистрыНакопления.Содержит(МетаданныеЗначения) Тогда
				
				ФормаСписка = РегистрыНакопления[МетаданныеЗначения.Имя].ПолучитьФормуСписка();
				
			ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(МетаданныеЗначения) Тогда
				
				ФормаСписка = РегистрыБухгалтерии[МетаданныеЗначения.Имя].ПолучитьФормуСписка();
				
			ИначеЕсли Метаданные.РегистрыРасчета.Содержит(МетаданныеЗначения) Тогда
				
				ФормаСписка = РегистрыРасчета[МетаданныеЗначения.Имя].ПолучитьФормуСписка();	
				
			КонецЕсли;
			
			Если ФормаСписка <> Неопределено Тогда
				
				// отбор ставим
				Для Каждого СтрокаОтбора Из ЗначениеОбъекта.Отбор Цикл
					
					СтрокаОтбораФормы = ФормаСписка.Отбор.Найти(СтрокаОтбора.Имя);
					
					Если СтрокаОтбораФормы = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаОтбораФормы.Использование = СтрокаОтбора.Использование;
					СтрокаОтбораФормы.ВидСравнения = СтрокаОтбора.ВидСравнения;
					СтрокаОтбораФормы.Значение = СтрокаОтбора.Значение;
					
				КонецЦикла;
				
				ФормаСписка.Открыть();
				
				Возврат;
			КонецЕсли;
			
			// либо менеджер константы, либо ссылочный объект
			ЗначениеОбъекта.ПолучитьФорму().Открыть();
			
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаОбъектовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.НомерТипаОбъекта = 0 Тогда
		
		ОформлениеСтроки.Ячейки.Объект.ИндексКартинки = 3;
		
	ИначеЕсли ДанныеСтроки.НомерТипаОбъекта = 1 Тогда
		
		ОформлениеСтроки.Ячейки.Объект.ИндексКартинки = 0;
		
	ИначеЕсли ДанныеСтроки.НомерТипаОбъекта = 2 Тогда
		
		ОформлениеСтроки.Ячейки.Объект.ИндексКартинки = 5;
		
	ИначеЕсли ДанныеСтроки.НомерТипаОбъекта = 3 Тогда
		
		ОформлениеСтроки.Ячейки.Объект.ИндексКартинки = 6;
		
	ИначеЕсли ДанныеСтроки.НомерТипаОбъекта = 4 Тогда
		
		ОформлениеСтроки.Ячейки.Объект.ИндексКартинки = 15;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Объект.ОтображатьКартинку = Истина;
	
КонецПроцедуры

Процедура ВыполнитьПроверкуНеДопустимыхСимволовВСтрокеДляЗаменыДляЗамены(Стр)
	
	Если ПустаяСтрока(Стр) Тогда
		Возврат;
	КонецЕсли;
		
	ПозицияНедопустимогоСимвола = НайтиНедопустимыеСимволыXML(Стр);	
		
	Если ПозицияНедопустимогоСимвола > 0 Тогда
		
		НоваяСтрока = "";
		Пока ПозицияНедопустимогоСимвола > 0 Цикл
			НоваяСтрока = НоваяСтрока + Лев(Стр, ПозицияНедопустимогоСимвола - 1);
			Стр = Сред(Стр, ПозицияНедопустимогоСимвола + 1);
			ПозицияНедопустимогоСимвола = НайтиНедопустимыеСимволыXML(Стр);	
		КонецЦикла;
		Стр = НоваяСтрока + Стр;
		
	КонецЕсли;
	
КонецПроцедуры

 Процедура ВыполнитьЗаменуПоИмениСвойства(Объект, ИмяСвойства)
	 
	Попытка
		 
		ЗначениеРеквизита = Объект[ИмяСвойства];
		Если ТипЗнч(ЗначениеРеквизита) = мТипСтрока Тогда
			
			ВыполнитьПроверкуНеДопустимыхСимволовВСтрокеДляЗаменыДляЗамены(ЗначениеРеквизита);
			Объект[ИмяСвойства] = ЗначениеРеквизита;
			
		КонецЕсли;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ВыполнитьЗаменуСимволов(Объект, МетаданныеОбхода)
	
	Для Каждого Реквизит Из МетаданныеОбхода Цикл
			
		ЗначениеРеквизита = Объект[Реквизит.Имя];
		Если ТипЗнч(ЗначениеРеквизита) = мТипСтрока Тогда
			
			ВыполнитьПроверкуНеДопустимыхСимволовВСтрокеДляЗаменыДляЗамены(ЗначениеРеквизита);
			Объект[Реквизит.Имя] = ЗначениеРеквизита;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработатьУдалениеСимволовУСтрокиТаблицы(ВыбраннаяСтрока)
	
	ЗначениеОбъекта = ВыбраннаяСтрока.СлужебныйОбъект;
	МетаданныеЗначения = ЗначениеОбъекта.Метаданные();
	
	Объект = Неопределено;
	
	Если Метаданные.РегистрыСведений.Содержит(МетаданныеЗначения)
		ИЛИ Метаданные.РегистрыНакопления.Содержит(МетаданныеЗначения)
		ИЛИ Метаданные.РегистрыБухгалтерии.Содержит(МетаданныеЗначения) Тогда
		
		Объект = ЗначениеОбъекта;
		
		// это набор записей регистра
		Для Каждого СтрокаНабора Из Объект Цикл
			
			ВыполнитьЗаменуСимволов(СтрокаНабора, МетаданныеЗначения.Измерения);
			ВыполнитьЗаменуСимволов(СтрокаНабора, МетаданныеЗначения.Реквизиты);	
			ВыполнитьЗаменуСимволов(СтрокаНабора, МетаданныеЗначения.Ресурсы);
			
		КонецЦикла;
		
	Иначе
		
		// это сам объект
		Объект = ЗначениеОбъекта.ПолучитьОбъект();
		
		// может быть код и наименование и номер
		ВыполнитьЗаменуПоИмениСвойства(Объект, "Код");
		ВыполнитьЗаменуПоИмениСвойства(Объект, "Наименование");
		ВыполнитьЗаменуПоИмениСвойства(Объект, "Номер");
		
		// проходим все реквизиты и ТЧ
		ВыполнитьЗаменуСимволов(Объект, МетаданныеЗначения.Реквизиты);
		
				
		Для Каждого ТабЧасть Из МетаданныеЗначения.ТабличныеЧасти Цикл
			
			Для Каждого СтрокаТЧ Из Объект[ТабЧасть.Имя] Цикл
				
				ВыполнитьЗаменуСимволов(СтрокаТЧ, ТабЧасть.Реквизиты);			
								
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Объект <> Неопределено Тогда
		
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.Записать();
		ВыбраннаяСтрока.ТекстОшибки = "Недопустимые символы устранены";
		
	КонецЕсли;	
	
КонецПроцедуры

// удаляет символы у текущего объекта
Процедура КоманднаяПанельТаблицыОбъектовУдалитьСимволыУТекущего(Кнопка)
	
	ВыбраннаяСтрока = ЭлементыФормы.ТаблицаОбъектов.ТекущиеДанные;
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьУдалениеСимволовУСтрокиТаблицы(ВыбраннаяСтрока);	
		
КонецПроцедуры

Процедура КоманднаяПанельТаблицыОбъектовУдалитьСимволыУВсех(Кнопка)
	
	Для Каждого СтрокаТаблицы Из ТаблицаОбъектов Цикл
		
		ОбработатьУдалениеСимволовУСтрокиТаблицы(СтрокаТаблицы);		
		
	КонецЦикла;
	
КонецПроцедуры


мТипСтрока = Тип("Строка");
